% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Data.R
\name{get_data}
\alias{get_data}
\title{Get data function}
\usage{
get_data(name, folder = "./HSI_Data/", verbose = TRUE, clip_p = 0.9975)
}
\arguments{
\item{name}{String argument of image name to be downloaded.}

\item{folder}{String argument of folder to send output to.}

\item{verbose}{boolean argument that determines if messages are printed as
function runs.}

\item{clip_p}{Numeric argument between zero and one that represents
percentile to clip the data outliers to.}
}
\value{
HSI_data object
}
\description{
Downloads or loads previously downloaded HSI data. Data can be indianpines,
salinas, paviau (university), paviac (center), ksc (Kennedy Space Center) or
botswana. The function can be called with a numeric argument, clip_p. This
determines the percentile to cap the outlying data at. The function returns
an HSI_data object that can be used for image segmentation and plotting the
resulting segmentation.
The HSI_data object that is returned contains a list of the following items:
name: The name of the image.
img_raw: The raw image data values.
img_clipped: The data values after clipping them according to the clip_p
paramater.
img: The img_clipped data values but on a 0-1 scale.
gt: The ground truth array.
label_values: The label values from image_details.
ignored_labels: The ignored labels from image_details.
rgb_bands: The rgb bands from image_details.
img_rgb: The img but only containing the three channels from rgb_bands.
}
\examples{
\dontrun{
bots <- get_data("botswana")
pu <- get_data("PaviaU", verbose = FALSE, clip_p = .9950)
}

}
