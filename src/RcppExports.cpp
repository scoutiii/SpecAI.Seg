// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_neigh
arma::mat get_neigh(int row, int col, arma::cube img);
RcppExport SEXP _SpecAI_Seg_get_neigh(SEXP rowSEXP, SEXP colSEXP, SEXP imgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type row(rowSEXP);
    Rcpp::traits::input_parameter< int >::type col(colSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type img(imgSEXP);
    rcpp_result_gen = Rcpp::wrap(get_neigh(row, col, img));
    return rcpp_result_gen;
END_RCPP
}
// rcmg_euclid
arma::mat rcmg_euclid(const arma::cube& img, int r);
RcppExport SEXP _SpecAI_Seg_rcmg_euclid(SEXP imgSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(rcmg_euclid(img, r));
    return rcpp_result_gen;
END_RCPP
}
// rcmg_cos
arma::mat rcmg_cos(const arma::cube& img, int r);
RcppExport SEXP _SpecAI_Seg_rcmg_cos(SEXP imgSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::cube& >::type img(imgSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(rcmg_cos(img, r));
    return rcpp_result_gen;
END_RCPP
}
// relabel_seg
arma::mat relabel_seg(arma::mat seg);
RcppExport SEXP _SpecAI_Seg_relabel_seg(SEXP segSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type seg(segSEXP);
    rcpp_result_gen = Rcpp::wrap(relabel_seg(seg));
    return rcpp_result_gen;
END_RCPP
}
// impose_markers
NumericMatrix impose_markers(NumericMatrix gradient_image, NumericMatrix markers);
RcppExport SEXP _SpecAI_Seg_impose_markers(SEXP gradient_imageSEXP, SEXP markersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type gradient_image(gradient_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type markers(markersSEXP);
    rcpp_result_gen = Rcpp::wrap(impose_markers(gradient_image, markers));
    return rcpp_result_gen;
END_RCPP
}
// watershed
NumericMatrix watershed(NumericMatrix modified_gradient_image, NumericMatrix markers);
RcppExport SEXP _SpecAI_Seg_watershed(SEXP modified_gradient_imageSEXP, SEXP markersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type modified_gradient_image(modified_gradient_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type markers(markersSEXP);
    rcpp_result_gen = Rcpp::wrap(watershed(modified_gradient_image, markers));
    return rcpp_result_gen;
END_RCPP
}
// marker_based_watershed
NumericMatrix marker_based_watershed(NumericMatrix gradient_image, NumericMatrix marker_image);
RcppExport SEXP _SpecAI_Seg_marker_based_watershed(SEXP gradient_imageSEXP, SEXP marker_imageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type gradient_image(gradient_imageSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type marker_image(marker_imageSEXP);
    rcpp_result_gen = Rcpp::wrap(marker_based_watershed(gradient_image, marker_image));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpecAI_Seg_get_neigh", (DL_FUNC) &_SpecAI_Seg_get_neigh, 3},
    {"_SpecAI_Seg_rcmg_euclid", (DL_FUNC) &_SpecAI_Seg_rcmg_euclid, 2},
    {"_SpecAI_Seg_rcmg_cos", (DL_FUNC) &_SpecAI_Seg_rcmg_cos, 2},
    {"_SpecAI_Seg_relabel_seg", (DL_FUNC) &_SpecAI_Seg_relabel_seg, 1},
    {"_SpecAI_Seg_impose_markers", (DL_FUNC) &_SpecAI_Seg_impose_markers, 2},
    {"_SpecAI_Seg_watershed", (DL_FUNC) &_SpecAI_Seg_watershed, 2},
    {"_SpecAI_Seg_marker_based_watershed", (DL_FUNC) &_SpecAI_Seg_marker_based_watershed, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpecAI_Seg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
